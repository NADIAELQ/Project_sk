# Generated by Django 4.2.2 on 2023-07-27 15:15

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('equipment', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Carrier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100, verbose_name='Carrier name')),
                ('about', models.CharField(blank=True, max_length=200, null=True, verbose_name='About the Company')),
                ('contact_person', models.CharField(db_index=True, max_length=100, verbose_name='Contact person')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Business email')),
                ('phone_number', models.CharField(blank=True, max_length=30, null=True, verbose_name='Business Phone')),
                ('website', models.URLField(blank=True, null=True, verbose_name='Website')),
                ('pounds_plus', models.BooleanField(choices=[(False, 'No'), (True, 'Yes')], default=False, verbose_name='Can load/unload 150+ pounds')),
                ('miles_plus', models.BooleanField(choices=[(False, 'No'), (True, 'Yes')], default=False, verbose_name='Can travel over 150 miles')),
                ('sequence', models.PositiveSmallIntegerField(db_index=True, editable=False, unique=True)),
            ],
            options={
                'verbose_name': 'Carrier',
                'verbose_name_plural': 'Carriers',
                'default_permissions': ['view', 'change', 'delete'],
            },
        ),
        migrations.CreateModel(
            name='Certification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True, verbose_name='Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('url', models.URLField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Certification',
                'verbose_name_plural': 'Certifications',
            },
        ),
        migrations.CreateModel(
            name='CarrierAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('line1', models.CharField(max_length=255, verbose_name='First line of address')),
                ('line2', models.CharField(blank=True, max_length=255, null=True, verbose_name='Second line of address')),
                ('city', models.CharField(blank=True, max_length=255, verbose_name='City')),
                ('state', models.CharField(blank=True, max_length=255, null=True, verbose_name='State')),
                ('postcode', models.CharField(blank=True, db_index=True, max_length=64, null=True, verbose_name='Zip Code')),
                ('search_text', models.TextField(editable=False, verbose_name='Search text - used only for searching addresses')),
                ('carrier', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='address', to='carrier.carrier', verbose_name='Carrier')),
            ],
            options={
                'verbose_name': "Carrier's address",
                'default_permissions': ['view', 'change', 'delete'],
            },
        ),
        migrations.CreateModel(
            name='CarrierVehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveSmallIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Number')),
                ('carrier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vehicles', to='carrier.carrier', verbose_name='Carrier')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='equipment.vehicletype', verbose_name='Type of Vehicle')),
            ],
            options={
                'verbose_name': "Carrier's vehicle",
                'verbose_name_plural': "Carrier's vehicles",
                'default_permissions': ['view', 'change', 'delete'],
                'unique_together': {('carrier', 'type')},
            },
        ),
        migrations.CreateModel(
            name='CarrierEquipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveSmallIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Number')),
                ('carrier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='equipments', to='carrier.carrier', verbose_name='Carrier')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='equipment.equipmenttype', verbose_name='Type of equipment')),
            ],
            options={
                'verbose_name': "Carrier's equipment",
                'verbose_name_plural': "Carrier's equipments",
                'default_permissions': ['view', 'change', 'delete'],
                'unique_together': {('carrier', 'type')},
            },
        ),
        migrations.CreateModel(
            name='CarrierCertification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('carrier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='certifications', to='carrier.carrier', verbose_name='Carrier')),
                ('certification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='carrier.certification', verbose_name='Certification')),
            ],
            options={
                'verbose_name': 'Carrier certifications',
                'unique_together': {('carrier', 'certification')},
            },
        ),
    ]
